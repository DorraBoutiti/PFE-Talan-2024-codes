version: '3.8'

networks:
  default:

services:

  mysql-db:    
    container_name:  mysql-db
    image: mysql:latest 
    #command: --default-authentication-plugin=mysql_native_password
    restart: unless-stopped
    env_file: ./.env
    environment:
      MYSQL_ROOT_PASSWORD: $MYSQLDB_PASSWORD
    ports:
      - $MYSQLDB_LOCAL_PORT:$MYSQLDB_DOCKER_PORT
    volumes:
      - mysql-volume:/var/lib/mysql:rw
      - ./mysql-db:/docker-entrypoint-initdb.d/
    networks:
      - default

  backend-document-analyzer:
    container_name: backend-document-analyzer
    # depends_on:
    #   - mysql-db
    build: ./backend-document-analyzer
    restart: unless-stopped
    env_file: ./.env
    ports:
      - $NESTJS_APP_LOCAL_PORT:$NESTJS_APP_DOCKER_PORT
    environment:
      - DB_HOST=$MYSQLDB_HOST
      - DB_USER=$MYSQLDB_USER
      - DB_PASSWORD=$MYSQLDB_PASSWORD
      - DB_DATABASE=$MYSQLDB_DATABASE
      - DB_PORT=$MYSQLDB_DOCKER_PORT
    stdin_open: true
    tty: true
    volumes:
      - ./backend-document-analyzer:/app
      - /app/node_modules
    networks:
      - default

  frontend-document-analyzer:
    container_name: frontend-document-analyzer
    # depends_on: 
      # - backend-document-analyzer
    build:
      context: ./frontend-document-analyzer
      dockerfile: Dockerfile
    restart: unless-stopped
    env_file: ./.env
    ports:
      - $REACTJS_APP_LOCAL_PORT:$REACTJS_APP_DOCKER_PORT
    stdin_open: true
    tty: true
    volumes:
      - ./frontend-document-analyzer:/app
      - /app/node_modules
      
    networks:
      - default
  
  module-upload:
    container_name: module-upload
    build: 
      context: ./module_upload
      dockerfile: Dockerfile
    restart: unless-stopped
    env_file: ./.env
    ports:
      - $MODULE_UPLOAD_LOCAL_PORT:$MODULE_UPLOAD_DOCKER_PORT
    stdin_open: true
    tty: true
    volumes:
      - ./module_upload:/app      
    networks:
      - default

  module-stt:
    container_name: module-stt
    build: 
      context: ./module_stt_competance
      dockerfile: Dockerfile
    restart: unless-stopped
    env_file: ./.env
    ports:
      - $MODULE_STT_LOCAL_PORT:$MODULE_STT_DOCKER_PORT
    stdin_open: true
    tty: true
    volumes:
      - ./module_stt_competance:/app
    networks:
      - default

  module_sirh:
    container_name: module_sirh
    build:
      context: ./module_sirh
      dockerfile: Dockerfile    
    restart: unless-stopped
    env_file: ./.env
    ports:
      - $MODULE_SIRH_LOCAL_PORT:$MODULE_SIRH_DOCKER_PORT
    stdin_open: true
    tty: true
    volumes:
      - ./module_sirh:/app
    networks:
      - default

  module_image_enhancement:
    container_name: module_image_enhancement
    build:
      context: ./module_image_enhancement
      dockerfile: Dockerfile
    restart: unless-stopped
    env_file: ./.env
    ports:
      - $MODULE_IMAGE_LOCAL_PORT:$MODULE_IMAGE_DOCKER_PORT
    stdin_open: true
    tty: true
    volumes:
      - ./module_image_enhancement:/app
    networks:
      - default

  module_extract_data:
    container_name: module_extract_data
    build:
      context: ./module_extract_data
      dockerfile: Dockerfile
    restart: unless-stopped
    env_file: ./.env
    ports:
      - $MODULE_EXTRACT_DATA_LOCAL_PORT:$MODULE_EXTRACT_DATA_DOCKER_PORT  
    stdin_open: true
    tty: true
    volumes:
      - ./module_extract_data:/app
    networks:
      - default

  module_classification:
    container_name: module_classification
    build:
      context: ./module_classification
      dockerfile: Dockerfile
    restart: unless-stopped
    env_file: ./.env
    ports:
      - $MODULE_CLASSIFICATION_DATA_LOCAL_PORT:$MODULE_CLASSIFICATION_DATA_DOCKER_PORT
    tty: true
    volumes:
      - ./module_classification:/app
    networks:
      - default

  module_ocr:
    container_name: module_ocr
    build:
      context: ./module_ocr
      dockerfile: Dockerfile
    restart: unless-stopped    
    ports:
      - ${MODULE_OCR_LOCAL_PORT}:${MODULE_OCR_DOCKER_PORT}
    stdin_open: true
    tty: true
    volumes:
      - ./module_ocr:/app
    environment:
      - MODULE_OCR_LOCAL_PORT=8003
      - MODULE_OCR_DOCKER_PORT=8003
    networks:
      - default

volumes: 
  mysql-volume: